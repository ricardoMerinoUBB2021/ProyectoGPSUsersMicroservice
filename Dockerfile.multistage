FROM node:16-alpine AS deps

# Configure npm for better network resilience
RUN npm config set fetch-retry-mintimeout 20000 \
    && npm config set fetch-retry-maxtimeout 120000 \
    && npm config set registry https://registry.npmjs.org/

WORKDIR /app

# Copy only package files for better layer caching
COPY package.json package-lock.json* ./

# Install dependencies with explicit cache options
RUN npm ci --prefer-offline --no-audit || npm install --prefer-offline --no-audit

# Build stage
FROM node:16-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

# Production stage
FROM node:16-alpine AS runner
WORKDIR /usr/src/app

ENV NODE_ENV=production

# Copy only the necessary files
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules

# Expose application port
EXPOSE 3001

# Run the application
CMD ["node", "dist/index.js"] 